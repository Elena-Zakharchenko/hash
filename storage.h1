#pragma once
#include<iostream>
#include<list>
#include<string>
#include<fstream> // для работы с файлами
#include"Box.h"
#include"hash.h"

struct Repository
{
	int cell_count = 1000000;
	std::list<Box>* repository = new std::list<Box>[1000000];
	void insert(std::string nameofbook);
	void destroy(std::string nameofbook);
	void find(std::string nameofbook);
	void readfile(std::string filename);
	void excel();
};


void Repository::insert(std::string nameofbook)
{
	int index =abs((int)(generetichash(nameofbook) % cell_count));
	Box book(nameofbook);
	book.nameofbook = nameofbook;
	repository[index].push_back(book);
	std::cout << nameofbook;
}

void Repository::destroy(std::string nameofbook)
{
	int index = abs((int)(generetichash(nameofbook) % cell_count));
	std::list<Box>::iterator it;
	for (it = repository[index].begin(); it != repository[index].end(); it++)
	{
		if (nameofbook == it->nameofbook) 
		{
			repository[index].erase(it);
			break;
		}
	}
}

void Repository::find(std::string nameofbook)
{
	int index = abs((int)(generetichash(nameofbook) % cell_count));
	std::list<Box>::iterator it;
	for (it = repository[index].begin(); it != repository[index].end(); it++)
	{
		if (nameofbook == it->nameofbook) 
		{
			std::cout << "We have this book" << std::endl;
			break; 
		}
	}
}


void Repository::readfile(std::string filename)
{
	std::ifstream tmp_file;
	tmp_file.open(filename);

	std::string tmp_str = "";
	while (tmp_file)
	{
		std::string str;
		std::getline(tmp_file, str);
		if (str != "")
		{
			Repository::insert(str);
		}

	}

}
void Repository::excel()
{
	std::ofstream file;
	file.open("ttt.txt");

	for (int i = 0; i <= cell_count - 1; i++)
	{
		int k = 0;
		std::list<Box>::iterator iter;
		for (iter = repository[i].begin(); iter != repository[i].end(); iter++)
		{
			k++;
		}
		file << k << "\n";
	};

	file.close();

}
